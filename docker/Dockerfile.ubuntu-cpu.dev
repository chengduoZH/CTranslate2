ARG UBUNTU_VERSION=18.04
FROM ubuntu:${UBUNTU_VERSION} as builder

RUN apt-get update && apt-get install -y --no-install-recommends \
        apt-transport-https \
        build-essential \
        ca-certificates \
        gnupg2 \
        wget \
        curl git bzip2 build-essential ninja-build g++ vim fish && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*

ENV PATH=/opt/miniconda3/bin:${PATH} CONDA_PREFIX=/opt/miniconda3
RUN curl -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -p /opt/miniconda3 -b && \
    rm Miniconda3-latest-Linux-x86_64.sh && \
    conda update -y conda && \
    conda install pytorch torchvision cpuonly  torchvision==0.5.0  -c pytorch &&\
    conda install curl conda-verify conda-build mkl-include cmake -c anaconda && \
    conda install git git-lfs docopt -c conda-forge  && \
    conda clean -afy
RUN pip --no-cache-dir install contexttimer future transformers docopt

WORKDIR /root
ENV MKL_VERSION=2020
ENV MKL_UPDATE=0
ENV MKL_BUILD=088
RUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \
    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-*.PUB && \
    rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-*.PUB && \
    echo "deb https://apt.repos.intel.com/mkl all main" > /etc/apt/sources.list.d/intel-mkl.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        intel-mkl-64bit-$MKL_VERSION.$MKL_UPDATE-$MKL_BUILD && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /root/ctranslate2-dev

COPY third_party third_party
COPY cli cli
COPY include include
COPY src src
COPY CMakeLists.txt .

ARG CXX_FLAGS
ENV CXX_FLAGS=${CXX_FLAGS}
ENV CTRANSLATE2_ROOT=/root/ctranslate2

RUN mkdir build && \
    cd build && \
    cmake -DCMAKE_INSTALL_PREFIX=${CTRANSLATE2_ROOT} \
          -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" .. && \
    VERBOSE=1 make -j4 && \
    make install

ENV LANG=en_US.UTF-8
COPY README.md .
COPY python python

WORKDIR /root/ctranslate2-dev/python
RUN python get-pip.py && \
    python -m pip --no-cache-dir install pybind11==2.4.3 && \
    python setup.py bdist_wheel && \
    rm -r build && \
    rm get-pip.py && \
    python -m pip freeze | grep pybind11 > /root/ctranslate2/install_requirements.txt && \
    python setup.py sdist && \
    mv dist/* /root/ctranslate2 && \
    rmdir dist

WORKDIR /root
RUN cp /opt/intel/lib/intel64/libiomp5.so /root/ctranslate2/lib
